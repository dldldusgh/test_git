[git 기초 명령어]
Initialazing
git init
-> 빈 폴더 하나를 git 저장소로 만드는 명령어다.

저장소 상태 확인
git status
-> 현재 변경사항, staging된 파일, ...
    저장소 정보 출력

Staging
git add 명령어로 수정된 파일을 커밋할 준비

Commit
git commit 명령어로 변경사항을 저장소에 영구적으로 기록
commit 마다에 번호가 부여됨(하나의 version)

변경사항 stage에 추가
git add <file_path>	
-> 해당파일을 스테이징한다
git add .			
-> 모든 변경사항을 스테이징한다

스테이징한 내역을 확정하여 버전 생성
git commit -m "남기고 싶은 메세지"

================ 2단계 ======================
Github와 로컬의 리포지토리를 연결하여, 로컬의 히스토리를 백업
로그인 및 리포지토리 성생

원격 저장소의 링크를 받아서 
git remote add <원격저장소별칭> <원격저장소링크>

원격 저장소와의 연결 정보 확인
git remote -v

원격 저장소로 로컬 저장소의 최신 변경 사항을 적용(또는 동기화)
git push <원격저장소별칭> <brench명>

사용자 설정 추가
git config --global user.name "유저명" user.email "이메일정보"
 *global: 모든 위치에서 이 자격 적용
 *local: 현재 폴더 위치에 자격 증명 적용

원격 저장소를 로컬 저장소로 복제
git clone <원격저장소링크> [경로]
 *경로 입력을 생략하면, 현재 폴더 안에 원격 저장소의 이름으로 
  폴더가 생성되고 그 안에 저장소 내용이 복제된다.
  만약 현재 폴더 안에 저장소 내용이 바로 들어가길 원한다면,
  마침표(.)를 경로에 넣어서 현재 폴더에 넣을 수 있다.

Brench
현재상태와 동일한 상태로 나눔

Merge
병합, Brench를 master에 병합

Brench 전략
master에서는 절대 작업하지 않는다

소스트리라는 프로그램으로 GUI 방식으로 컨트롤이 가능하다.